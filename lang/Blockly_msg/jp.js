// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.jp');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "コメントを追加";
Blockly.Msg.CHANGE_VALUE_TITLE = "値を変更:";//"Change value:"
Blockly.Msg.CLEAN_UP = "ブロックを消去";
Blockly.Msg.COLLAPSE_ALL = "ブロックを縮小";
Blockly.Msg.COLLAPSE_BLOCK = "ブロックを縮小";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "色 1";//"colour 1"
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "色 2";//"colour 2"
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "比率";//"ratio"
Blockly.Msg.COLOUR_BLEND_TITLE = "混合";//"blend"
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "二つの色を比率(0.0 - 1.0)で混ぜる";//"Blends two colours together with a given ratio (0.0 - 1.0)."
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "パレットから色を選択";//"Choose a colour from the palette."
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";
Blockly.Msg.COLOUR_RANDOM_TITLE = "ランダムな色";//"random colour"
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "ランダムに色を選択";//"Choose a colour at random."
Blockly.Msg.COLOUR_RGB_BLUE = "青";
Blockly.Msg.COLOUR_RGB_GREEN = "緑";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "赤";
Blockly.Msg.COLOUR_RGB_TITLE = "色を作成";//"colour with"
Blockly.Msg.COLOUR_RGB_TOOLTIP = "数値で色を作成　値は0-100の範囲";//"Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100."
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "ループを抜ける";//"break out of loop"
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "次の繰り返しを続ける"//"continue with next iteration of loop";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "包摂ループを抜ける";//"Break out of the containing loop."
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "ループの残りをスキップ、次の繰り返しへ進む";//"Skip the rest of this loop, and continue with the next iteration."
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "注意: このブロックはループの中のみで使われます";//"Warning: This block may only be used within a loop."
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";
Blockly.Msg.CONTROLS_FOREACH_TITLE = "配列 %2の中の要素 %1に対して";//"for each item %1 in list %2"
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "配列中の要素に対して, 変数 '%1' を要素に設定, その後構文を実行.";//"For each item in a list, set the variable '%1' to the item, and then do some statements."
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";
Blockly.Msg.CONTROLS_FOR_TITLE = "%1 を %2 から %3 まで %4 刻みでカウントする";//"count with %1 from %2 to %3 by %4"
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "変数 '%1' を開始値から終了値まで 所定の間隔でとらせ、ブロックを実行";//"Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks."
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "「もし」ブロックに条件を追加";//"Add a condition to the if block."
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "「もし」ブロックに「それ以外」の条件を追加";//"Add a final, catch-all condition to the if block."
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "「もし」ブロック再定義のための追加、削除、並べ替え";//"Add, remove, or reorder sections to reconfigure this if block."
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "それ以外";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "それ以外でもし～";
Blockly.Msg.CONTROLS_IF_MSG_IF = "もし～";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "もし値が真（正しい）なら、構文を実行";//"If a value is true, then do some statements."
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "もし値が真（正しい）なら、最初のブロックを実行、そうでなければ2番目のブロックを実行";//"If a value is true, then do the first block of statements. Otherwise, do the second block of statements."
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "もし最初の値が真（正しい）なら、最初のブロックを実行、そうでなければ、2番目の値が真（正しい）なら、2番目のブロックを実行";//"If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements."
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "もし最初の値が真（正しい）なら、最初のブロックを実行、そうでなければ、2番目の値が真（正しい）なら、2番目のブロックを実行 もし両方とも真（正しい）でなければ、最後のブロックを実行";//"If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements."
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "実行";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "繰り返し %1 回";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "構文を繰り返し実行";//"Do some statements several times."
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "～まで繰り返し";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "～の間繰り返し";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "値が偽の間、構文を実行";//"While a value is false, then do some statements."
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "値が真の間、構文を実行";//"While a value is true, then do some statements.";
Blockly.Msg.DELETE_ALL_BLOCKS = "ブロック %1 個すべて消去しますか?";
Blockly.Msg.DELETE_BLOCK = "ブロックを消去";
Blockly.Msg.DELETE_VARIABLE = "変数 '%1' を消去";
Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = " %1 個の変数 '%2' を消去しますか?";
Blockly.Msg.DELETE_X_BLOCKS = "ブロック %1 を消去";
Blockly.Msg.DISABLE_BLOCK = "ブロックを無効化";
Blockly.Msg.DUPLICATE_BLOCK = "複製";
Blockly.Msg.ENABLE_BLOCK = "ブロックを有効化";
Blockly.Msg.EXPAND_ALL = "ブロックを拡大";
Blockly.Msg.EXPAND_BLOCK = "ブロックを拡大";
Blockly.Msg.EXTERNAL_INPUTS = "外部入力";
Blockly.Msg.HELP = "ヘルプ";
Blockly.Msg.INLINE_INPUTS = "横方向で入力";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "空の配列を作成";//"create empty list";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "要素なしの配列を戻す";//"Returns a list, of length 0, containing no data records"
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "配列";//"list"
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "この配列を再定義するために追加、削除、並べ替え";//"Add, remove, or reorder sections to reconfigure this list block."
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "配列を作成";//"create list with"
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "配列に要素を追加";//"Add an item to the list."
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "要素で配列を作成";//"Create a list with any number of items."
Blockly.Msg.LISTS_GET_INDEX_FIRST = "first";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# from end";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "get";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "get and remove";
Blockly.Msg.LISTS_GET_INDEX_LAST = "last";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "random";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "remove";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returns the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "Returns the item at the specified position in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returns the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returns a random item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Removes and returns the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Removes and returns the item at the specified position in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Removes and returns the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Removes and returns a random item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Removes the first item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Removes the item at the specified position in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Removes the last item in a list.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Removes a random item in a list.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "to # from end";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "to #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "to last";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "get sub-list from first";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "get sub-list from # from end";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "get sub-list from #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Creates a copy of the specified portion of a list.";
Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 is the last item.";
Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 is the first item.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "find first occurrence of item";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
Blockly.Msg.LISTS_INDEX_OF_LAST = "find last occurrence of item";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";
Blockly.Msg.LISTS_INLIST = "in list";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 は空";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Returns true if the list is empty.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";
Blockly.Msg.LISTS_LENGTH_TITLE = "length of %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returns the length of a list.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_REPEAT_TITLE = "create list with item %1 repeated %2 times";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Creates a list consisting of the given value repeated the specified number of times.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "as";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insert at";
Blockly.Msg.LISTS_SET_INDEX_SET = "set";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserts the item at the start of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Inserts the item at the specified position in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Append the item to the end of a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item randomly in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Sets the item at the specified position in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sets the last item in a list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sets a random item in a list.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "make list from text";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "make text from list";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "偽";//"false"
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "真あるいは偽を返す";//"Returns either true or false."
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "真";//"true"
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "２つの入力が等しければ真（正しい）を返す";//"Return true if both inputs equal each other."
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "第一の入力が第２の入力より大きければ真（正しい）を返す";//"Return true if the first input is greater than the second input."
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "第一の入力が第２の入力より大きいか等しければ真（正しい）を返す";//"Return true if the first input is greater than or equal to the second input."
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "第一の入力が第２の入力より小さければ真（正しい）を返す";//"Return true if the first input is smaller than the second input."
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "第一の入力が第２の入力より小さいか等しければ真（正しい）を返す";//"Return true if the first input is smaller than or equal to the second input."
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "２つの入力が等しくなければ真（正しい）を返す";//"Return true if both inputs are not equal to each other."
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";
Blockly.Msg.LOGIC_NEGATE_TITLE = "ではない %1";//"not %1"
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "入力が偽（間違い）なら真（正しい）を、真（正しい）なら偽（間違い）を返す";//"Returns true if the input is false. Returns false if the input is true."
Blockly.Msg.LOGIC_NULL = "値なし";//"null"
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "値無しを返す";
Blockly.Msg.LOGIC_OPERATION_AND = "かつ";//"and"
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";
Blockly.Msg.LOGIC_OPERATION_OR = "または";//"or"
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "両方とも真（正しい）ならば真（正しい）を返す";//"Return true if both inputs are true."
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "少なくともどちらかが真（正しい）ならば真（正しい）を返す";//"Return true if at least one of the inputs is true."
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "if false";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "if true";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "２つの数値の和を返す";//"Return the sum of the two numbers."
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "２つの数値の商を返す";//"Return the quotient of the two numbers."
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "２つの数値の差を返す";//"Return the difference of the two numbers."
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "２つの数値の積を返す";//"Return the product of the two numbers."
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "第一の数値の第２の数値「乗」を返す";//"Return the first number raised to the power of the second number."
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "変数 %1 を変更 %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Add a number to variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "定数を返す: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), ∞ (無限).";//"Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity)."
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "制限 %1 下限 %2 上限 %3";//"constrain %1 low %2 high %3"
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "数値を下限と上限の範囲に収める　範囲内の場合はそのまま";//"Constrain a number to be between the specified limits (inclusive)."
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "is divisible by";
Blockly.Msg.MATH_IS_EVEN = "is even";
Blockly.Msg.MATH_IS_NEGATIVE = "is negative";
Blockly.Msg.MATH_IS_ODD = "is odd";
Blockly.Msg.MATH_IS_POSITIVE = "is positive";
Blockly.Msg.MATH_IS_PRIME = "is prime";
Blockly.Msg.MATH_IS_TOOLTIP = "数値が偶数、奇数、素数、整数、正、負、ある数で割り切れるか、を調べる　真か偽を返す";//"Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false."
Blockly.Msg.MATH_IS_WHOLE = "is whole";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "余り %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "割り算の余りを返す";//"Return the remainder from dividing the two numbers."
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "数値";//"A number."
Blockly.Msg.MATH_ONLIST_HELPURL = "";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "平均";//"average of list"
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "最大値";//"max of list"
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "中心値";//"median of list"
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "最小値";//"min of list"
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "最頻値";//"modes of list"
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "ランダムな要素";//"random item of list"
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "標準偏差";//"standard deviation of list"
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "総和";//"sum of list"
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "リストの算術平均値を返す";//"Return the average (arithmetic mean) of the numeric values in the list."
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "リストの最大値を返す";//"Return the largest number in the list."
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "リストの中心値を返す";//"Return the median number in the list."
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "リストの最小値を返す";//"Return the smallest number in the list."
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "リストの最頻値を返す";//"Return a list of the most common item(s) in the list."
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "リストからランダムな要素を返す";//"Return a random element from the list."
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "リストの標準偏差を返す";//"Return the standard deviation of the list."
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "リストの総和を返す";//"Return the sum of all the numbers in the list."
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "乱数 0～1.0";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "0(含む)～1.0(含まない)のランダムな小数を返す";//"Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive)."
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "乱数　範囲： %1 以上 %2 以下";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "範囲内のランダムな整数を返す";//"Return a random integer between the two specified limits, inclusive."
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "四捨五入";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "切り下げ";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "切り上げ";
Blockly.Msg.MATH_ROUND_TOOLTIP = "数値の切り上げ、切り下げ";//"Round a number up or down."
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "絶対値";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "ルート";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "絶対値を返す";//"Return the absolute value of a number."
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "eの累乗を返す";//"Return e to the power of a number."
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "自然対数";//"Return the natural logarithm of a number."
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "10を底とする対数";//"Return the base 10 logarithm of a number."
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "符号反転";//"Return the negation of a number."
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "10の累乗を返す";//"Return 10 to the power of a number."
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "平方根を返す";//"Return the square root of a number."
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "逆余弦を返す";//"Return the arccosine of a number."
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "逆正弦を返す";//"Return the arcsine of a number."
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "逆正接を返す";//"Return the arctangent of a number."
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "角度（ラジアンではない）のコサインを返す";//"Return the cosine of a degree (not radian)."
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "角度（ラジアンではない）のサインを返す";//"Return the sine of a degree (not radian)."
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "角度（ラジアンではない）のタンジェントを返す";//"Return the tangent of a degree (not radian)."
Blockly.Msg.NEW_VARIABLE = "変数を作成...";
Blockly.Msg.NEW_VARIABLE_TITLE = "新しい変数の名前:";//"New variable name:"
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "構文あり";//"allow statements"
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "引数:";//"with:"
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "ユーザー定義の関数 '%1'を実行";//"Run the user-defined function '%1'."
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "ユーザー定義の関数 '%1' を実行し戻り値を使う";//"Run the user-defined function '%1' and use its output."
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "引数:";//"with:"
Blockly.Msg.PROCEDURES_CREATE_DO = "Create '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "名前を付ける";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "関数";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "戻り値のない関数を作成";//"Creates a function with no output."
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "値を返す";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "戻り値のある関数を作成";//"Creates a function with an output."
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warning: This function has duplicate parameters.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight function definition";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "値が真なら第2の値を返す";//"If a value is true, then return a second value."
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warning: This block may be used only within a function definition.";

Blockly.Msg.PROCEDURES_MUTATORARG_TYPE = "引数の型";//"input type"
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "引数の名前";//"input name"
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "関数に引数を追加";//"Add an input to the function."
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "引数";//"inputs"
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "この関数に引数を追加、削除、並べ替え";//"Add, remove, or reorder inputs to this function."
Blockly.Msg.REDO = "Redo";
Blockly.Msg.REMOVE_COMMENT = "Remove Comment";
Blockly.Msg.RENAME_VARIABLE = "名前を変更...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Rename all '%1' variables to:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "に文字列追加";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg.TEXT_APPEND_TO = "to";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "変数 '%1' に文字列を追加.";//"Append some text to variable '%1'."
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "to lower case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "to Title Case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "to UPPER CASE";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Return a copy of the text in a different case.";
Blockly.Msg.TEXT_CHARAT_FIRST = "get first letter";
Blockly.Msg.TEXT_CHARAT_FROM_END = "get letter # from end";
Blockly.Msg.TEXT_CHARAT_FROM_START = "get letter #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_CHARAT_LAST = "get last letter";
Blockly.Msg.TEXT_CHARAT_RANDOM = "get random letter";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returns the letter at the specified position.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Add an item to the text.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "join";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, remove, or reorder sections to reconfigure this text block.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "to letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "to letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "to last letter";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "in text";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "get substring from first letter";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "get substring from letter # from end";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "get substring from letter #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returns a specified portion of the text.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "in text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "find first occurrence of text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "find last occurrence of text";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 は空";//"%1 is empty"
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "文字列が空なら真を返す";//"Returns true if the provided text is empty."
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "文字を連結";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "文字を連結";//"Create a piece of text by joining together any number of items."
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg.TEXT_LENGTH_TITLE = "文字列の長さ %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "文字列の長さ(スペースを含む)を返す";//"Returns the number of letters (including spaces) in the provided text."
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";
Blockly.Msg.TEXT_PRINT_TITLE = "print %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Print the specified text, number or other value.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Prompt for user for a number.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Prompt for user for some text.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "prompt for number with message";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "prompt for text with message";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "文字、文字列";//"A letter, word, or line of text."
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "trim spaces from both sides of";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "trim spaces from left side of";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "trim spaces from right side of";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Return a copy of the text with spaces removed from one or both ends.";
Blockly.Msg.TODAY = "Today";
Blockly.Msg.UNDO = "Undo";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "item";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Create 'set %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returns the value of this variable.";
Blockly.Msg.VARIABLES_SET = "変数 %1 に代入 %2";
Blockly.Msg.VARIABLES_SET_INIT = "変数を初期化";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Create 'get %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "変数を入力の値に設定";//"Sets this variable to be equal to the input."
Blockly.Msg.VARIABLE_ALREADY_EXISTS = "A variable named '%1' already exists.";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = "function";
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;